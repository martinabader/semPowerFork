% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convenienceFunctions.R
\name{semPower.powerCFA}
\alias{semPower.powerCFA}
\title{semPower.powerCFA}
\usage{
semPower.powerCFA(
  type,
  comparison = "restricted",
  Phi = NULL,
  nullEffect = "cor = 0",
  nullWhich = NULL,
  ...
)
}
\arguments{
\item{type}{type of power analysis, one of 'a-priori', 'post-hoc', 'compromise'}

\item{comparison}{comparison model, one of 'saturated' or 'restricted'. This determines the df for power analyses. 'Saturated' provides power to reject the model when compared to the saturated model, so the df equal the one of the hypothesized model. 'Restricted' provides power to reject the model when compared to a model that just restricts the parameter defined by nullCor to zero, so the df are always 1.}

\item{Phi}{either a single number defining the correlation between exactly two factors or the factor correlation matrix.}

\item{nullEffect}{defines the hypothesis of interest. Valid are 'cor = 0' (the default) and 'corX = corZ' to test for the equality of correlations. Define the correlations to be set to equality in nullWhich}

\item{nullWhich}{vector of size 2 indicating which factor correlation in phi is hypothesized to equal zero when nullEffect = 'cor = 0' or list of vectors defining which correlations to restrict to equality when nullEffect = 'corX = corZ'. Can also contain more than two correlations, e.g., list(c(1,2), c(1,3), c(2,3)) to set phi[1,2] = phi[1,3] = phi[2,3]}

\item{...}{other parameters specifying the factor model (see [semPower.genSigma()]) and the type of power analysis}
}
\value{
a list containing the results of the power analysis, Sigma and SigmaHat, the implied loading matrix (lambda), as well as several lavaan model strings (modelPop, modelTrue, and modelAna)
}
\description{
Convenience function for performing power analysis for simple CFA models involving one hypothesized zero correlation between factors.
This requires the lavaan package.
}
\examples{
\dontrun{
# a priori power analysis only providing the number of indicators to define 
# two factors with correlation of phi and same loading for all indicators
cfapower.ap <- semPower.powerCFA(type = 'a-priori',
                                 nullWhich = c(1, 2), 
                                 Phi = .2, nIndicator = c(5, 6), loadM = .5,
                                 alpha = .05, beta = .05)
                                 summary(cfapower.ap$power)

# same as above, but compare to the saturated model 
# (rather than to the less restricted model)
#' cfapower.ap <- semPower.powerCFA(type = 'a-priori', comparison = 'saturated', 
                                 nullWhich = c(1, 2), 
                                 Phi = .2, nIndicator = c(5, 6), loadM = .5,
                                 alpha = .05, beta = .05)

# same as above, but request a compromise power analysis
cfapower.cp <- semPower.powerCFA(type = 'compromise',
                                 nullWhich = c(1, 2), 
                                 Phi = .2, nIndicator = c(5, 6), loadM = .5,
                                 abratio = 1, N = 200)

# same as above, but request a post-hoc power analysis
cfapower.ph <- semPower.powerCFA(type = 'post-hoc', 
                                 nullWhich = c(1, 2), 
                                 Phi = .2, nIndicator = c(5, 6), loadM = .5,
                                 alpha = .05, N = 200)

# post-hoc power analysis providing factor correlation matrix 
# and reduced loading matrix 
Phi <- matrix(c(
                c(1.0, 0.1),
                c(0.1, 1.0)
              ), byrow = T, ncol = 2)

# loadings: only define primary loadings 
# must not contain secondary loadings
loadings <- list(
               c(0.4, 0.5, 0.8),
               c(0.7, 0.6, 0.5, 0.4)
               )

cfapower <- semPower.powerCFA(type = 'post-hoc',
                              nullWhich = c(1, 2), 
                              Phi = phi, loadings = loadings,
                              alpha = .05, N = 250)

}
}
\seealso{
[semPower.genSigma()]
}
