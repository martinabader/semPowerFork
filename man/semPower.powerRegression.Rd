% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convenienceFunctions.R
\name{semPower.powerRegression}
\alias{semPower.powerRegression}
\title{semPower.powerRegression}
\usage{
semPower.powerRegression(
  type,
  comparison = "restricted",
  slopes = NULL,
  corXX = NULL,
  nullEffect = "slope = 0",
  nullWhich = NULL,
  ...
)
}
\arguments{
\item{type}{type of power analysis, one of 'a-priori', 'post-hoc', 'compromise'}

\item{comparison}{comparison model, one of 'saturated' or 'restricted'. This determines the df for power analyses. 'Saturated' provides power to reject the model when compared to the saturated model, so the df equal the one of the hypothesized model. 'Restricted' provides power to reject the model when compared to a model that just restricts the indirect effect to zero, so the df are always 1.}

\item{corXX}{correlation(s) between the k predictors (X). Either NULL, a single number (for k = 2 predictors), or a matrix. If NULL, the predictors are uncorrelated.}

\item{nullEffect}{defines the hypothesis of interest. Valid are 'slope = 0' (the default) and 'slopeX = slopeZ' to test for the equality of slopes. Define the slopes to set to equality in nullWhich}

\item{nullWhich}{single number indicating which slope is hypothesized to equal zero when nullEffect = 'slope = 0' or vector defines which slopes to restrict to equality when nullEffect = 'slopeX = slopeZ'. Can also contain more than two slopes.}

\item{...}{other parameters specifying the factor model (see [semPower.genSigma()]), where the first factor corresponds to Y (so you need nfactors = slopes + 1), and the type of power analysis}

\item{slope}{vector of standardized slopes (or a single number for a single slope) of the k predictors for Y.}
}
\value{
a list containing the results of the power analysis, Sigma and SigmaHat, the implied loading matrix (lambda), as well as several lavaan model strings (modelPop, modelTrue, and modelAna)
}
\description{
Convenience function for performing power analysis on slope(s) in a latent regression.
This requires the lavaan package.
}
\examples{
\dontrun{
# latent regression of the form Y = .2*X1 + .3*X2, where X1 and X2 correlate by .4
# request power for the hypothesis that the slope of X1 ist zero. 
# providing the number of indicators by factor (Y, X1, X2) each loading by the same magnitude on its designed factor.
regPower <- semPower.powerRegression(type = 'a-priori',
                                     slopes = c(.2, .3), corXX = .4, nullWhich = 1, 
                                     nIndicator = c(3, 5, 4),
                                     loadM = c(.5, .6, .7),
                                     alpha = .05, beta = .05)
summary(regPower$power)

# same as above, but ask for power to detect the  slope of X2
regPower <- semPower.powerRegression(type = 'a-priori',
                                     slopes = c(.2, .3), corXX = .4, nullWhich = 2, 
                                     nIndicator = c(3, 5, 4),
                                     loadM = c(.5, .6, .7),
                                     alpha = .05, beta = .05)

# latent regression with three predictors, providing the predictor intercorrelation matrix
corXX <- matrix(c(
  c(1.00, 0.20, 0.30),
  c(0.20, 1.00, 0.10),
  c(0.30, 0.10, 1.00)
), ncol = 3,byrow = TRUE)
regPower <- semPower.powerRegression(type = 'a-priori',
                                     slopes = c(.2, .3, .4), corXX = corXX, 
                                     nullWhich = 1
                                     nIndicator = c(4, 3, 5, 4),
                                     loadM = c(.5, .5, .6, .7),
                                     alpha = .05, beta = .05)

# same as above, but testing the equality of the first and second slope
regPower <- semPower.powerRegression(type = 'a-priori',
                                     slopes = c(.2, .3, .4), corXX = corXX, 
                                     nullEffect = 'slopeX = slopeZ', 
                                     nullWhich = c(1, 2),
                                     nIndicator = c(4, 3, 5, 4),
                                     loadM = c(.5, .5, .6, .7),
                                     alpha = .05, beta = .05)
                                     
# same as above, but testing the equality of all three slopes
regPower <- semPower.powerRegression(type = 'a-priori',
                                     slopes = c(.2, .3, .4), corXX = corXX, 
                                     nullEffect = 'slopeX = slopeZ', 
                                     nullWhich = c(1, 2, 3),
                                     nIndicator = c(4, 3, 5, 4),
                                     loadM = c(.5, .5, .6, .7),
                                     alpha = .05, beta = .05)
                                     
}
}
\seealso{
[semPower.genSigma()]
}
