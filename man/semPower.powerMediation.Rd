% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convenienceFunctions.R
\name{semPower.powerMediation}
\alias{semPower.powerMediation}
\title{semPower.powerMediation}
\usage{
semPower.powerMediation(
  type,
  comparison = "restricted",
  bYX = NULL,
  bMX = NULL,
  bYM = NULL,
  Beta = NULL,
  indirect = NULL,
  nullEffect = "ind = 0",
  nullWhichGroups = NULL,
  ...
)
}
\arguments{
\item{type}{type of power analysis, one of 'a-priori', 'post-hoc', 'compromise'}

\item{comparison}{comparison model, one of 'saturated' or 'restricted'. This determines the df for power analyses. 'Saturated' provides power to reject the model when compared to the saturated model, so the df equal the one of the hypothesized model. 'Restricted' provides power to reject the model when compared to a model that just restricts the indirect effect to zero, so the df are always 1.}

\item{bYX}{the standardized slope (direct effect) for X -> Y. A list for multiple group models.}

\item{bMX}{the standardized slope for X -> M. A list for multiple group models.}

\item{bYM}{the standardized slope for M -> Y. A list for multiple group models.}

\item{Beta}{matrix of regression weights connecting the latent factors (all-Y notation). Exogenous variables must be in the first rows, so the upper triangular of Beta must be zero. A list for multiple group models.}

\item{indirect}{a list of indices indicating the elements of B that define the indirect effect of interest, e.g. list(c(2,1),c(3,2)).}

\item{nullEffect}{defines the hypothesis of interest. Valid are 'ind = 0' (the default) and 'indA = indB' to test for the equality of indirect effects across groups. See details.}

\item{nullWhichGroups}{vector indicating for which groups equality constrains should be applied, e.g. c(1, 3) to constrain the slopes in the first and third group to equality. If NULL, all groups are constrained to equality.}

\item{...}{other parameters specifying the factor model (see [semPower.genSigma()]) and the type of power analysis}
}
\value{
a list containing the results of the power analysis, the population covariance matrix Sigma and mean vector mu, the H0 implied matrix SigmaHat and mean vector muHat, as well as various lavaan model strings (modelH0, and modelH1)
}
\description{
Convenience function for performing power analysis concerning indirect effect(s) in a mediation model.
This requires the lavaan package.
}
\details{
For models without latent variables, nullEffect = 'ind=0' and nullEffect = 'inda=indb' constrain the indirect effect to zero and to equality, respectively.
For models with latent variables and nullEffect = 'ind=0', power is approximated by constraining the smallest slope contained in the indirect effect to zero. 
For models with latent variables multiple groups (i.e., nullEffect = 'inda=indb'), there is currently no way to determine power, 
because implementing equality constrains on the indirect effects leads to non-convergence and 
the approach to constrain a single or all slopes to equality across groups misrepresents the actual hypothesis of interest.
}
\examples{
\dontrun{
# simple case of X -> M -> Y mediation
# X -- .30 --> M -- .40 --> Y 
# X --------- .25 --------> Y 
# providing the number of indicators by factor (X, M, Y) each loading by the same magnitude on its designed factor.
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    nIndicator = c(3, 5, 4), 
                                    loadM = c(.5, .6, .7),                                     
                                    alpha = .05, beta = .05)
summary(medPower$power)
                                    
# same mediation model as above, but assuming single loading of 1 for all factors (=> mediation model with manifest variables)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    nIndicator = c(1, 1, 1), loadM = 1,
                                    alpha = .05, beta = .05)

# same latent mediation model as above, but specifying loadings through Lambda 
Lambda <- matrix(c(
                c(0.5, 0.0, 0.0),    # X, M, Y
                c(0.4, 0.0, 0.0),
                c(0.3, 0.0, 0.0),
                c(0.0, 0.7, 0.0),
                c(0.0, 0.8, 0.0),
                c(0.0, 0.5, 0.0),
                c(0.0, 0.0, 0.5),
                c(0.0, 0.0, 0.4),
                c(0.0, 0.0, 0.6)
               ), byrow = TRUE, ncol = 3)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    Lambda = Lambda,                                     
                                    alpha = .05, beta = .05)

# same mediation model as above, but specifying Beta 
B <- matrix(c(
              c(.00, .00, .00),
              c(.30, .00, .00),
              c(.25, .40, .00)
              ), byrow = TRUE, ncol = 3)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    Beta = B, indirect = list(c(2,1), c(3,2)),
                                    Lambda = Lambda,
                                    alpha = .05, beta = .05)

# Beta for a more complex mediation hypothesis
# of the form X -> M1 -> M2 -> Y 
# and using a reduced loading matrix
B <- matrix(c(
              c(.00, .00, .00, .00),
              c(.20, .00, .00, .00),
              c(.00, .30, .00, .00),
              c(.00, .00, .40, .00)
              ), byrow = TRUE, ncol = 4)
# only define primary loadings by factor
loadings <- list(
               c(0.4, 0.5, 0.8),
               c(0.7, 0.6, 0.5, 0.8),
               c(0.5, 0.6, 0.3, 0.4, 0.6),
               c(0.6, 0.7, 0.8)
               )

medPower <- semPower.powerMediation(type = 'a-priori', 
                                    Beta = B, indirect = list(c(2,1), c(3,2), c(4,3)),
                                    loadings = loadings,
                                    alpha = .05, beta = .05)
 
# multigroup example
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    nullEffect = 'indA = indB',
                                    bYX = list(.25, .25), bMX = list(.3, .3), bYM = list(.4, .5),
                                    Lambda = diag(3), N = list(1, 1),
                                    alpha = .05, beta = .05)
}
}
\seealso{
[semPower.genSigma()]
}
