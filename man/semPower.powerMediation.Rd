% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convenienceFunctions.R
\name{semPower.powerMediation}
\alias{semPower.powerMediation}
\title{semPower.powerMediation}
\usage{
semPower.powerMediation(
  type,
  comparison = "restricted",
  bYX = NULL,
  bMX = NULL,
  bYM = NULL,
  Beta = NULL,
  indirect = NULL,
  ...
)
}
\arguments{
\item{type}{type of power analysis, one of 'a-priori', 'post-hoc', 'compromise'}

\item{comparison}{comparison model, one of 'saturated' or 'restricted'. This determines the df for power analyses. 'Saturated' provides power to reject the model when compared to the saturated model, so the df equal the one of the hypothesized model. 'Restricted' provides power to reject the model when compared to a model that just restricts the indirect effect to zero, so the df are always 1.}

\item{bYX}{the standardized slope (direct effect) for X -> Y}

\item{bMX}{the standardized slope for X -> M}

\item{bYM}{the standardized slope for M -> Y}

\item{Beta}{matrix of regression weights connecting the latent factors, akin to all-Y notation. Note that in case of > 3 factors power is only approximate.}

\item{indirect}{a list of indices indicating the elements of B that define the indirect effect of interest, e.g. list(c(2,1),c(3,2)).}

\item{...}{other parameters specifying the factor model (see [semPower.genSigma()]) and the type of power analyses}
}
\value{
a list containing the results of the power analysis, Sigma and SigmaHat, the implied loading matrix (lambda), as well as several lavaan model strings (modelPop, modelTrue, and modelAna)
}
\description{
Convenience function for performing power analysis concerning indirect effect(s) in a mediation model.
This requires the lavaan package.
}
\examples{
\dontrun{
# simple case of X -> M -> Y mediation
# X -- .30 --> M -- .40 --> Y 
# X --------- .25 --------> Y 
# providing the number of indicators by factor (X, M, Y) each loading by the same magnitude on its designed factor.
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    nIndicator = c(3, 5, 4), 
                                    loadM = c(.5, .6, .7),                                     
                                    alpha = .05, beta = .05)
summary(medPower$power)
                                    
# same mediation model as above, but assuming single loading of 1 for all factors (=> mediation model with manifest variables)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    nIndicator = c(1, 1, 1), loadM = 1,
                                    alpha = .05, beta = .05)

# same latent mediation model as above, but specifying loadings through Lambda 
Lambda <- matrix(c(
                c(0.5, 0.0, 0.0),    # X, M, Y
                c(0.4, 0.0, 0.0),
                c(0.3, 0.0, 0.0),
                c(0.0, 0.7, 0.0),
                c(0.0, 0.8, 0.0),
                c(0.0, 0.5, 0.0),
                c(0.0, 0.0, 0.5),
                c(0.0, 0.0, 0.4),
                c(0.0, 0.0, 0.6),
               ), byrow = TRUE, ncol = 3)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    bYX = .25, bMX = .3, bYM = .4,
                                    Lambda = Lambda,                                     
                                    alpha = .05, beta = .05)

# same mediation model as above, but specifying Beta 
B <- matrix(c(
              c(.00, .00, .00),
              c(.30, .00, .00),
              c(.25, .40, .00)
              ), byrow = TRUE, ncol = 3)
medPower <- semPower.powerMediation(type = 'a-priori', 
                                    Beta = B, indirect = list(c(2,1), c(3,2)),
                                    Lambda = Lambda,
                                    alpha = .05, beta = .05)

# Beta for a more complex mediation hypothesis
# of the form X -> M1 -> M2 -> Y 
# and using a reduced loading matrix
B <- matrix(c(
              c(.00, .00, .00, .00),
              c(.20, .00, .00, .00),
              c(.00, .30, .00, .00),
              c(.00, .00, .40, .00)
              ), byrow = TRUE, ncol = 4)
# only define primary loadings by factor
loadings <- list(
               c(0.4, 0.5, 0.8),
               c(0.7, 0.6, 0.5, 0.8),
               c(0.5, 0.6, 0.3, 0.4, 0.6),
               c(0.6, 0.7, 0.8)
               )

medPower <- semPower.powerMediation(type = 'a-priori', 
                                    Beta = B, indirect = list(c(2,1), c(3,2), c(4,3)),
                                    loadings = loadings,
                                    alpha = .05, beta = .05)
 
}
}
\seealso{
[semPower.genSigma()]
}
